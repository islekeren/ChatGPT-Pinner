function _(){try{let f=function(t){try{const e=t.closest('li[data-testid^="history-item-"]');if(!e){const i=t.closest(".no-draggable.group.rounded-lg.active\\:opacity-90, div[class*='relative flex items-center']");if(i){const c=i.querySelector("a"),s=i.querySelector("div.text-token-text-primary.grow")||i.querySelector("div.relative.grow.overflow-hidden.whitespace-nowrap[dir='auto'][title]")||i.querySelector("div.relative.grow.overflow-hidden.whitespace-nowrap[dir='auto']");if(c&&s){const d=c.getAttribute("href"),l=s.getAttribute("title")||s.textContent.trim(),u=$(d);return u?(console.log(`ChatGPT Pinner: Extracted (container) Chat/Project ID: ${u}, Name: ${l}`),{chatId:u,chatName:l}):(console.warn("ChatGPT Pinner: Could not extract ID from href (container):",d),null)}}return console.error("ChatGPT Pinner: Could not find parent list item or suitable container for button."),null}const r=e.querySelector('a[data-history-item-link="true"]');let n=e.querySelector("div[title]"),o=n?n.getAttribute("title"):null;if((!n||!o)&&(n=e.querySelector("div.relative.grow.overflow-hidden.whitespace-nowrap[dir='auto']"),n&&(o=n.textContent.trim())),r&&n&&o){const i=r.getAttribute("href"),c=$(i);return c?{chatId:c,chatName:o}:(console.warn("ChatGPT Pinner: Could not extract ID from href (list item):",i),null)}else console.error("ChatGPT Pinner: Could not find link or name element within list item.",e);return null}catch(e){return console.error(`ChatGPT Pinner: Error in extractChatInfo: ${e.message}`,e),null}},$=function(t){try{if(!t)return null;const e=t.split("/");if(e.length>=3&&e[e.length-2]==="c"){const n=e[e.length-1];if(n.match(/^[a-f0-9]{8}-([a-f0-9]{4}-){3}[a-f0-9]{12}$/i))return n}if(e.length>=3&&e[e.length-2]==="g"){const n=e[e.length-1];if(n.match(/^g-[a-zA-Z0-9-]+$/i)||n.match(/^g-p-[a-f0-9]{32}$/i))return n}if(e.length>=4&&e[e.length-3]==="g"&&e[e.length-1]==="project"){const n=e[e.length-2];if(n.match(/^g-p-[a-f0-9]{32}$/i))return n}const r=e[e.length-1];return r.match(/^[a-f0-9]{8}-([a-f0-9]{4}-){3}[a-f0-9]{12}$/i)||r.match(/^g-p-[a-f0-9]{32}$/i)||r.match(/^g-[a-zA-Z0-9]+$/i)?r:(console.warn("ChatGPT Pinner: Could not match known ID pattern in:",t),null)}catch(e){return console.error(`ChatGPT Pinner: Error in extractIdFromHref: ${e.message}`,e),null}},S=function(t){try{const e=t.querySelectorAll('div[role="menuitem"]');if(e.length<2)return!1;let r=0;const n=[C.SHARE,C.RENAME,C.DELETE,C.ARCHIVE];e.forEach(c=>{const s=c.querySelector("svg path");if(s){const d=s.getAttribute("d");d&&n.some(l=>d.startsWith(l))&&r++}});const o=t.querySelector('div[role="separator"]')!==null;return r>=2||r>=1&&o}catch(e){return console.error(`ChatGPT Pinner: Error in isMainChatMenu: ${e.message}`,e),!1}},G=function(t,e,r){try{t.querySelectorAll(".chatgpt-pinner-item, .chatgpt-bookmarker-item, .chatgpt-pinner-unpin-item, .chatgpt-bookmark-remove-item, .chatgpt-move-to-bookmarks-item, .chatgpt-move-to-pinned-item").forEach(o=>o.remove()),console.log(`ChatGPT Pinner: Injecting/Updating options for: ${r} (${e}) into menu`),chrome.storage.sync.get(["pinnedChats","bookmarkedChats"],function(o){try{if(chrome.runtime.lastError){console.error("Storage error:",chrome.runtime.lastError.message),a(`Error accessing storage: ${chrome.runtime.lastError.message}`,"error");return}const i=o.pinnedChats||[],c=o.bookmarkedChats||[],s=i.some(m=>m.id===e),d=c.some(m=>m.id===e);let l=null;const u=Array.from(t.querySelectorAll('div[role="menuitem"]'));if(l=u.find(m=>m.querySelector(`svg path[d^="${C.SHARE}"]`)),l||(l=t.querySelector('[data-testid*="share-chat-menu-item"]')),l||(l=u.find(m=>{var p;return(p=m.textContent)==null?void 0:p.trim().startsWith("Share")}),l&&console.warn("ChatGPT Pinner: Found Share item by text content (fallback).")),l||(l=t.querySelector('div[role="menuitem"]'),console.warn("ChatGPT Pinner: Share item not found using icon, testid, or text. Inserting after the first menu item.")),!l){console.error("ChatGPT Pinner: Menu seems empty. Cannot inject.");return}const h=m=>{l&&l.parentNode?(l.parentNode.insertBefore(m,l.nextSibling),l=m):(console.error("ChatGPT Pinner: Failed to insert, reference element or parent missing. Appending as last resort."),t.appendChild(m),l=m)};if(s){const m=v("Unpin Conversation",'<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="icon-sm shrink-0"><path d="M4 8h8" stroke="currentColor" stroke-width="2"/></svg>',"chatgpt-pinner-unpin-item");m.addEventListener("click",g=>{g.stopPropagation(),E(e),y(t)}),h(m);const p=v("Move to Bookmarks",'<svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="icon-sm shrink-0"><path d="M16.998 8.50199H7.00195M7.00195 8.50199L10.502 5.00195M7.00195 8.50199L10.502 12.002M7.00195 15.502H17.002M17.002 15.502L13.502 19.002M17.002 15.502L13.502 12.002" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/></svg>',"chatgpt-move-to-bookmarks-item");p.addEventListener("click",g=>{g.stopPropagation(),E(e),A(e,r),y(t)}),h(p)}else if(d){const m=v("Remove Bookmark",'<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="icon-sm shrink-0"><path d="M4 8h8" stroke="currentColor" stroke-width="2"/></svg>',"chatgpt-bookmark-remove-item");m.addEventListener("click",g=>{g.stopPropagation(),B(e),y(t)}),h(m);const p=v("Move to Pinned",'<svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="icon-sm shrink-0"><path d="M16.998 8.50199H7.00195M7.00195 8.50199L10.502 5.00195M7.00195 8.50199L10.502 12.002M7.00195 15.502H17.002M17.002 15.502L13.502 19.002M17.002 15.502L13.502 12.002" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/></svg>',"chatgpt-move-to-pinned-item");p.addEventListener("click",g=>{g.stopPropagation(),B(e),M(e,r),y(t)}),h(p)}else{const m=v("Pin Conversation",'<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="icon-sm shrink-0"><path fill-rule="evenodd" clip-rule="evenodd" d="M11.5 5.5V2C11.5 1.72386 11.2761 1.5 11 1.5H5C4.72386 1.5 4.5 1.72386 4.5 2V5.5C4.5 6.32843 3.82843 7 3 7C2.72386 7 2.5 7.22386 2.5 7.5C2.5 7.77614 2.72386 8 3 8H7.5V13.5C7.5 13.7761 7.72386 14 8 14C8.27614 14 8.5 13.7761 8.5 13.5V8H13C13.2761 8 13.5 7.77614 13.5 7.5C13.5 7.22386 13.2761 7 13 7C12.1716 7 11.5 6.32843 11.5 5.5Z" fill="currentColor"></path></svg>',"chatgpt-pinner-item");m.addEventListener("click",g=>{g.stopPropagation(),M(e,r),y(t)}),h(m);const p=v("Bookmark Conversation",'<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="icon-sm shrink-0"><path fill-rule="evenodd" clip-rule="evenodd" d="M3 3.25C3 2.00736 4.00736 1 5.25 1H10.75C11.9926 1 13 2.00736 13 3.25V14.0387C13 14.7926 12.1798 15.2843 11.5094 14.9145L8 12.882L4.49063 14.9145C3.82021 15.2843 3 14.7926 3 14.0387V3.25ZM5.25 2.5C4.83579 2.5 4.5 2.83579 4.5 3.25V13.0387L7.50937 11.3355C7.8094 11.1573 8.1906 11.1573 8.49063 11.3355L11.5 13.0387V3.25C11.5 2.83579 11.1642 2.5 10.75 2.5H5.25Z" fill="currentColor"/></svg>',"chatgpt-bookmarker-item");p.addEventListener("click",g=>{g.stopPropagation(),A(e,r),y(t)}),h(p)}console.log("ChatGPT Pinner: Menu options injected/updated successfully.")}catch(i){console.error(`ChatGPT Pinner: Error processing storage data in injectPinElement: ${i.message}`,i),a(`Error updating menu options: ${i.message}`,"error")}})}catch(n){console.error(`ChatGPT Pinner: Error in injectPinElement setup: ${n.message}`,n),a(`Failed to prepare menu options: ${n.message}`,"error")}},v=function(t,e,r){try{const n=document.createElement("div");n.className=`${r} flex items-center m-1.5 p-2.5 text-sm cursor-pointer focus-visible:outline-0 radix-disabled:pointer-events-none radix-disabled:opacity-50 group relative hover:bg-[#f5f5f5] focus-visible:bg-[#f5f5f5] dark:hover:bg-token-main-surface-secondary dark:focus-visible:bg-token-main-surface-secondary rounded-md my-0 px-3 mx-2 gap-2.5 py-3`,n.setAttribute("role","menuitem"),n.tabIndex=-1,n.setAttribute("data-orientation","vertical"),n.setAttribute("data-radix-collection-item","");const o=document.createElement("div");o.className="flex items-center justify-center text-token-text-secondary h-5 w-5",o.innerHTML=e;const i=document.createTextNode(t);return n.appendChild(o),n.appendChild(i),n}catch(n){console.error(`ChatGPT Pinner: Error in createMenuOption: ${n.message}`,n);const o=document.createElement("div");return o.textContent="Error creating option",o.style.color="red",o}},y=function(t){try{console.log("[Pinner] Attempting to close menu via Escape key dispatch:",t),document.body.dispatchEvent(new KeyboardEvent("keydown",{key:"Escape",code:"Escape",keyCode:27,which:27,bubbles:!0,cancelable:!0}))}catch(e){console.error(`ChatGPT Pinner: Error in closeMenu: ${e.message}`,e)}},M=function(t,e){try{if(!t||!e){console.error("ChatGPT Pinner: Invalid chat data",{chatId:t,chatName:e}),a("Cannot pin: Invalid chat data.","error");return}chrome.storage.sync.get(["pinnedChats","bookmarkedChats"],function(r){try{if(chrome.runtime.lastError){console.error("Storage get error:",chrome.runtime.lastError.message),a("Error accessing storage","error");return}let n=r.pinnedChats||[],o=r.bookmarkedChats||[];const i=o.some(s=>s.id===t);if(i&&(o=o.filter(s=>s.id!==t)),n.some(s=>s.id===t))i?chrome.storage.sync.set({bookmarkedChats:o},function(){chrome.runtime.lastError?console.error("Error updating bookmarks:",chrome.runtime.lastError):a(`"${e}" is already pinned`)}):a(`"${e}" is already pinned`);else{if(n.length>=10){a("Max 10 pins reached.","error");return}let d=`/c/${t}`;t.startsWith("g-p-")?d=`/g/${t}/project`:t.startsWith("g-")?d=`/g/${t}`:t.match(/^[a-f0-9-]{36}$/i)||console.warn("Unknown ID format:",t),n.push({id:t,name:e,url:d,pinnedAt:new Date().toISOString()}),chrome.storage.sync.set({pinnedChats:n,bookmarkedChats:o},function(){chrome.runtime.lastError?(console.error("Error saving pin:",chrome.runtime.lastError),a("Error pinning","error")):(a(`"${e}" pinned`),b())})}}catch(n){console.error(`ChatGPT Pinner: Error processing pin operation: ${n.message}`,n),a(`Error pinning chat: ${n.message}`,"error")}})}catch(r){console.error(`ChatGPT Pinner: Error initiating savePinnedChat: ${r.message}`,r),a(`Failed to initiate pinning: ${r.message}`,"error")}},A=function(t,e){try{if(!t||!e){console.error("ChatGPT Pinner: Invalid chat data",{chatId:t,chatName:e}),a("Cannot bookmark: Invalid chat data.","error");return}chrome.storage.sync.get(["pinnedChats","bookmarkedChats"],function(r){try{if(chrome.runtime.lastError){console.error("Storage get error:",chrome.runtime.lastError.message),a("Error accessing storage","error");return}let n=r.pinnedChats||[],o=r.bookmarkedChats||[];const i=n.some(s=>s.id===t);if(i&&(n=n.filter(s=>s.id!==t),b()),o.some(s=>s.id===t))i?chrome.storage.sync.set({pinnedChats:n},function(){chrome.runtime.lastError?console.error("Error updating pins:",chrome.runtime.lastError):a(`"${e}" is already bookmarked`)}):a(`"${e}" is already bookmarked`);else{if(o.length>=50){a("Max 50 bookmarks reached.","error");return}let d=`/c/${t}`;t.startsWith("g-p-")?d=`/g/${t}/project`:t.startsWith("g-")?d=`/g/${t}`:t.match(/^[a-f0-9-]{36}$/i)||console.warn("Unknown ID format:",t),o.push({id:t,name:e,url:d,bookmarkedAt:new Date().toISOString()}),chrome.storage.sync.set({pinnedChats:n,bookmarkedChats:o},function(){chrome.runtime.lastError?(console.error("Error saving bookmark:",chrome.runtime.lastError),a("Error bookmarking","error")):a(`"${e}" bookmarked`,"bookmark")})}}catch(n){console.error(`ChatGPT Pinner: Error processing bookmark operation: ${n.message}`,n),a(`Error bookmarking chat: ${n.message}`,"error")}})}catch(r){console.error(`ChatGPT Pinner: Error initiating saveBookmarkedChat: ${r.message}`,r),a(`Failed to initiate bookmarking: ${r.message}`,"error")}},E=function(t){try{chrome.storage.sync.get(["pinnedChats"],function(e){try{if(chrome.runtime.lastError){console.error("Storage get error:",chrome.runtime.lastError.message),a("Error accessing storage","error");return}const n=(e.pinnedChats||[]).filter(o=>o.id!==t);chrome.storage.sync.set({pinnedChats:n},function(){chrome.runtime.lastError?(console.error("Error unpinning:",chrome.runtime.lastError),a("Error unpinning","error")):(a("Chat unpinned"),b())})}catch(r){console.error(`ChatGPT Pinner: Error processing unpin operation: ${r.message}`,r),a(`Error unpinning chat: ${r.message}`,"error")}})}catch(e){console.error(`ChatGPT Pinner: Error initiating unpinChat: ${e.message}`,e),a(`Failed to initiate unpinning: ${e.message}`,"error")}},B=function(t){try{chrome.storage.sync.get(["bookmarkedChats"],function(e){try{if(chrome.runtime.lastError){console.error("Storage get error:",chrome.runtime.lastError.message),a("Error accessing storage","error");return}const n=(e.bookmarkedChats||[]).filter(o=>o.id!==t);chrome.storage.sync.set({bookmarkedChats:n},function(){chrome.runtime.lastError?(console.error("Error removing bookmark:",chrome.runtime.lastError),a("Error removing bookmark","error")):a("Bookmark removed")})}catch(r){console.error(`ChatGPT Pinner: Error processing remove bookmark operation: ${r.message}`,r),a(`Error removing bookmark: ${r.message}`,"error")}})}catch(e){console.error(`ChatGPT Pinner: Error initiating removeBookmarkedChat: ${e.message}`,e),a(`Failed to initiate bookmark removal: ${e.message}`,"error")}},a=function(t,e="success"){try{const r=document.createElement("div");r.textContent=t;let n="#10a37f";e==="error"?n="#e53e3e":e==="bookmark"&&(n="#1a73e8"),r.style.cssText=`position: fixed; bottom: 20px; right: 20px; background-color: ${n}; color: white; padding: 10px 16px; border-radius: 8px; font-size: 14px; font-family: inherit; z-index: 10000; box-shadow: 0 4px 12px rgba(0,0,0,0.15); opacity: 0; transform: translateY(10px); transition: opacity 0.3s ease, transform 0.3s ease; pointer-events: none;`,document.body.appendChild(r),setTimeout(()=>{r.style.opacity="1",r.style.transform="translateY(0)"},10),setTimeout(()=>{r.style.opacity="0",r.style.transform="translateY(10px)",setTimeout(()=>{r.parentNode&&r.parentNode.removeChild(r)},300)},3e3)}catch(r){console.error(`ChatGPT Pinner: Error in showNotification: ${r.message}`,r),alert(`${e.toUpperCase()}: ${t}`)}},H=function(t){try{const e=document.createElement("li");e.className="relative",e.setAttribute("data-pinner-item-id",t.id);const r=document.createElement("div");r.className="no-draggable group rounded-lg active:opacity-90 bg-[var(--item-background-color)] h-9 text-sm screen-arch:bg-transparent relative flex items-center pr-2",r.style.setProperty("--item-background-color","var(--sidebar-surface-primary)");const n=document.createElement("a");n.className="flex items-center gap-2 p-2 flex-grow overflow-hidden",n.href=t.url,n.setAttribute("data-pinner-link","true"),n.style.maskImage="var(--sidebar-mask)";const o=document.createElement("div");o.className="relative grow overflow-hidden whitespace-nowrap",o.dir="auto",o.title=t.name,o.textContent=t.name,n.appendChild(o);const i=document.createElement("button");return i.className="text-token-text-secondary hover:text-token-text-primary invisible group-hover:visible p-1 rounded",i.setAttribute("aria-label","Unpin conversation"),i.innerHTML='<svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="icon-sm"><line x1="18" y1="6" x2="6" y2="18" stroke="currentColor" stroke-width="2"/><line x1="6" y1="6" x2="18" y2="18" stroke="currentColor" stroke-width="2"/></svg>',i.onclick=c=>{c.preventDefault(),c.stopPropagation(),E(t.id)},r.appendChild(n),r.appendChild(i),e.appendChild(r),e}catch(e){console.error(`ChatGPT Pinner: Error in createPinnedChatItemElement for ${t.id}: ${e.message}`,e);const r=document.createElement("li");return r.textContent=`Error displaying pinned item: ${t.name}`,r.style.color="red",r}},b=function(){try{chrome.storage.sync.get(["pinnedChats","showPinnedInSidebar"],function(t){try{if(chrome.runtime.lastError){console.error("Storage get error for displayPinnedChats:",chrome.runtime.lastError.message);return}const e=t.pinnedChats||[],r=t.showPinnedInSidebar!==!1,n=document.getElementById("pinned-chats-section");if(n&&n.remove(),!r||e.length===0)return;const o=document.getElementById("sidebar");if(!o){setTimeout(b,1e3);return}const i=o.querySelector('a[data-testid="explore-gpts-button"]'),c=document.getElementById("history");let s=null,d="after";if(i)s=i;else if(c)s=c,d="before";else{const u=o.querySelector(".sticky .text-xs.font-semibold");if(u)if(s=u.closest(".relative.mt-5"),s)d="before";else{console.error("Cannot inject pins.");return}else{console.error("Cannot inject pins.");return}}const l=I(e);s&&s.parentNode?d==="after"?s.parentNode.insertBefore(l,s.nextSibling):s.parentNode.insertBefore(l,s):console.error("Insertion point error.")}catch(e){console.error(`ChatGPT Pinner: Error processing pinned chats for display: ${e.message}`,e)}})}catch(t){console.error(`ChatGPT Pinner: Error initiating displayPinnedChats: ${t.message}`,t)}},I=function(t){try{const e=document.createElement("div");e.id="pinned-chats-section",e.className="relative mt-5 first:mt-0 last:mb-5";const r=document.createElement("div");r.className="bg-token-sidebar-surface-primary sticky top-0 z-20";const n=document.createElement("span");n.className="flex h-9 items-center";const o=document.createElement("h3");o.className="px-2 text-xs font-semibold text-ellipsis overflow-hidden break-all pt-3 pb-2 text-token-text-primary",o.textContent="Pinned",n.appendChild(o),r.appendChild(n),e.appendChild(r);const i=document.createElement("ol");return t.sort((c,s)=>new Date(s.pinnedAt)-new Date(c.pinnedAt)).forEach(c=>i.appendChild(H(c))),e.appendChild(i),e}catch(e){console.error(`ChatGPT Pinner: Error in createPinnedSectionElement: ${e.message}`,e);const r=document.createElement("div");return r.textContent="Error creating pinned section.",r.style.color="red",r}},j=function(t,e){try{const r=document.querySelectorAll('[data-radix-popper-content-wrapper] [role="menu"][data-radix-menu-content][data-state="open"], body > [role="menu"][data-radix-menu-content][data-state="open"]');for(const n of r)if(S(n)&&!n.querySelector(".chatgpt-pinner-item"))return G(n,t,e),!0;return!1}catch(r){return console.error(`ChatGPT Pinner: Error in tryImmediateInjection: ${r.message}`,r),!1}},L=function(t){try{const e=t.currentTarget,r=e.closest("span[data-state]"),n=e.closest('li[data-testid^="history-item-"]'),o=e.closest('a[href^="/g/"]');if(!r&&!n&&!o)return;setTimeout(()=>{const i=f(e);if(!i)return;const{chatId:c,chatName:s}=i;if(!c||!s)return;j(c,s)||D(c,s)},50)}catch(e){console.error(`ChatGPT Pinner: Error in handleOptionsButtonClick: ${e.message}`,e)}},D=function(t,e){var o;let r=null,n=null;try{const i=()=>{r&&(r.disconnect(),r=null),n&&(clearTimeout(n),n=null)};r=new MutationObserver(s=>{let d=!1;for(const l of s){if(d)break;if(l.addedNodes.length)for(const u of l.addedNodes){if(d)break;if(u.nodeType===1){let h=null;if(u.matches('[role="menu"][data-radix-menu-content][data-state="open"]')?h=u:u.querySelector&&(h=u.querySelector('[role="menu"][data-radix-menu-content][data-state="open"]')),h&&S(h))if(h.querySelector(".chatgpt-pinner-item")){i();break}else{G(h,t,e),d=!0,i();break}}}}}),r.observe(document.body,{childList:!0,subtree:!1});const c=((o=document.querySelector("[data-radix-popper-content-wrapper]"))==null?void 0:o.parentNode)||document.body;c!==document.body&&r.observe(c,{childList:!0,subtree:!0}),n=setTimeout(()=>{r&&i()},1500)}catch(i){console.error(`ChatGPT Pinner: Error setting up observeMenuAddition: ${i.message}`,i),r&&r.disconnect(),n&&clearTimeout(n)}},R=function(){try{console.log("ChatGPT Pinner: Performing initial scan for options buttons."),document.querySelectorAll(q).forEach(t=>{(t.querySelector(`svg path[d^="${z}"]`)||t.closest("span[data-state]"))&&!t.hasAttribute("data-pinner-listener-added")&&(t.addEventListener("click",L),t.setAttribute("data-pinner-listener-added","true"))})}catch(t){console.error(`ChatGPT Pinner: Error during initialScan: ${t.message}`,t)}};var k=f,O=$,w=S,N=G,x=v,P=y,T=M,U=A,W=E,X=B,Z=a,Y=H,J=b,Q=I,ee=j,re=L,te=D,ne=R;console.log("ChatGPT Pinner: Initializing... with error handling");const C={SHARE:"M11.2929 3.29289C",RENAME:"M13.2929 4.29291C",ARCHIVE:"M4.82918 4.10557C",DELETE:"M10.5555 4C10.099 4"},q='li[data-testid^="history-item-"] button, a[href^="/g/"] button',z="M3 12C3",F=new MutationObserver(t=>{try{t.forEach(e=>{e.addedNodes.forEach(r=>{var n;if(r.nodeType===Node.ELEMENT_NODE){const o=r.matches(q)?[r]:(n=r.querySelectorAll)==null?void 0:n.call(r,q);o&&o.length>0&&o.forEach(i=>{(i.querySelector(`svg path[d^="${z}"]`)||i.closest("span[data-state]"))&&!i.hasAttribute("data-pinner-listener-added")&&(i.addEventListener("click",L),i.setAttribute("data-pinner-listener-added","true"))})}})})}catch(e){console.error(`ChatGPT Pinner: Error in mainObserver callback: ${e.message}`,e)}});try{F.observe(document.body,{childList:!0,subtree:!0})}catch(t){console.error(`ChatGPT Pinner: Failed to start mainObserver: ${t.message}`,t)}try{R(),b(),chrome.storage.onChanged.addListener((t,e)=>{try{e==="sync"&&t.pinnedChats&&(console.log("ChatGPT Pinner: Detected change in pinned chats storage."),b())}catch(r){console.error(`ChatGPT Pinner: Error in storage.onChanged listener: ${r.message}`,r)}}),console.log("ChatGPT Pinner: Initialization complete (V6 with error handling).")}catch(t){console.error(`ChatGPT Pinner: Error during initial setup: ${t.message}`,t),a("Error initializing Pinner features on page.","error")}}catch(C){console.error("ChatGPT Pinner: CRITICAL ERROR during initialization phase.",C);try{const f=document.createElement("div");f.textContent="Critical Pinner Error. Some features may not work. Check console.",f.style.cssText="position: fixed; bottom: 20px; right: 20px; background-color: #e53e3e; color: white; padding: 10px 16px; border-radius: 8px; font-size: 14px; z-index: 10000; box-shadow: 0 4px 12px rgba(0,0,0,0.15);",document.body.appendChild(f),setTimeout(()=>{f.parentNode&&f.parentNode.removeChild(f)},5e3)}catch{alert("Critical Pinner Error. Check console.")}}}function V(){try{document.querySelector('nav[aria-label*="Chat history"], nav[aria-label*="Sohbet geçmişi"]')||document.getElementById("sidebar")?(console.log("ChatGPT Pinner: Sidebar or history nav detected, proceeding with initialization."),_()):(console.log("ChatGPT Pinner: Sidebar/History nav not ready, retrying initialization..."),setTimeout(V,1e3))}catch(k){console.error(`ChatGPT Pinner: Error in attemptInitialization: ${k.message}`,k)}}K('li[data-testid^="history-item-"] > div > a[data-history-item-link="true"]').then(()=>{V()}).catch(k=>{console.error("ChatGPT Pinner: Element wait failed",k)});function K(k,O=7e3){return new Promise((w,N)=>{const x=document.querySelector(k);if(x)return w(x);const P=new MutationObserver(()=>{const T=document.querySelector(k);T&&(P.disconnect(),w(T))});P.observe(document.body,{childList:!0,subtree:!0}),setTimeout(()=>{P.disconnect(),N(new Error("Timeout waiting for "+k))},O)})}
