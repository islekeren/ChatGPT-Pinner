function I(e){try{if(!e)return null;const t=e.split("/");if(t.length>=3&&t[t.length-2]==="c"){const r=t[t.length-1];if(r.match(/^[a-f0-9]{8}-([a-f0-9]{4}-){3}[a-f0-9]{12}$/i))return r}if(t.length>=3&&t[t.length-2]==="g"){const r=t[t.length-1];if(r.match(/^g-[a-zA-Z0-9-]+$/i)||r.match(/^g-p-[a-f0-9]{32}$/i))return r}if(t.length>=4&&t[t.length-3]==="g"&&t[t.length-1]==="project"){const r=t[t.length-2];if(r.match(/^g-p-[a-f0-9]{32}$/i))return r}const n=t[t.length-1];return n.match(/^[a-f0-9]{8}-([a-f0-9]{4}-){3}[a-f0-9]{12}$/i)||n.match(/^g-p-[a-f0-9]{32}$/i)||n.match(/^g-[a-zA-Z0-9]+$/i)?n:(console.warn("ChatGPT Pinner: Could not match known ID pattern in:",e),null)}catch(t){return console.error(`ChatGPT Pinner: Error in extractIdFromHref: ${t.message}`,t),null}}function F(e){try{const t=e.closest('li[data-testid^="history-item-"]');if(!t){const i=e.closest(".no-draggable.group.rounded-lg.active\\:opacity-90, div[class*='relative flex items-center']");if(i){const a=i.querySelector("a"),d=i.querySelector("div.text-token-text-primary.grow")||i.querySelector("div.relative.grow.overflow-hidden.whitespace-nowrap[dir='auto'][title]")||i.querySelector("div.relative.grow.overflow-hidden.whitespace-nowrap[dir='auto']");if(a&&d){const s=a.getAttribute("href"),c=d.getAttribute("title")||d.textContent.trim(),m=I(s);return m?(console.log(`ChatGPT Pinner: Extracted (container) Chat/Project ID: ${m}, Name: ${c}`),{chatId:m,chatName:c}):(console.warn("ChatGPT Pinner: Could not extract ID from href (container):",s),null)}}return console.error("ChatGPT Pinner: Could not find parent list item or suitable container for button."),null}const n=t.querySelector('a[data-history-item-link="true"]');let r=t.querySelector("div[title]"),o=r?r.getAttribute("title"):null;if((!r||!o)&&(r=t.querySelector("div.relative.grow.overflow-hidden.whitespace-nowrap[dir='auto']"),r&&(o=r.textContent.trim())),n&&r&&o){const i=n.getAttribute("href"),a=I(i);return a?{chatId:a,chatName:o}:(console.warn("ChatGPT Pinner: Could not extract ID from href (list item):",i),null)}else console.error("ChatGPT Pinner: Could not find link or name element within list item.",t);return null}catch(t){return console.error(`ChatGPT Pinner: Error in extractChatInfo: ${t.message}`,t),null}}function C(e,t,n){try{const r=document.createElement("div");r.className=`${n} flex items-center m-1.5 p-2.5 text-sm cursor-pointer focus-visible:outline-0 radix-disabled:pointer-events-none radix-disabled:opacity-50 group relative hover:bg-[#f5f5f5] focus-visible:bg-[#f5f5f5] dark:hover:bg-token-main-surface-secondary dark:focus-visible:bg-token-main-surface-secondary rounded-md my-0 px-3 mx-2 gap-2.5 py-3`,r.setAttribute("role","menuitem"),r.tabIndex=-1,r.setAttribute("data-orientation","vertical"),r.setAttribute("data-radix-collection-item","");const o=document.createElement("div");o.className="flex items-center justify-center text-token-text-secondary h-5 w-5",o.innerHTML=t;const i=document.createTextNode(e);return r.appendChild(o),r.appendChild(i),r}catch(r){console.error(`ChatGPT Pinner: Error in createMenuOption: ${r.message}`,r);const o=document.createElement("div");return o.textContent="Error creating option",o.style.color="red",o}}function k(e){try{console.log("[Pinner] Attempting to close menu via Escape key dispatch:",e),document.body.dispatchEvent(new KeyboardEvent("keydown",{key:"Escape",code:"Escape",keyCode:27,which:27,bubbles:!0,cancelable:!0}))}catch(t){console.error(`ChatGPT Pinner: Error in closeMenu: ${t.message}`,t)}}function u(e,t="success"){try{const n=document.createElement("div");n.textContent=e;let r="#10a37f";t==="error"?r="#e53e3e":t==="bookmark"&&(r="#1a73e8"),n.style.cssText=`position: fixed; bottom: 20px; right: 20px; background-color: ${r}; color: white; padding: 10px 16px; border-radius: 8px; font-size: 14px; font-family: inherit; z-index: 10000; box-shadow: 0 4px 12px rgba(0,0,0,0.15); opacity: 0; transform: translateY(10px); transition: opacity 0.3s ease, transform 0.3s ease; pointer-events: none;`,document.body.appendChild(n),setTimeout(()=>{n.style.opacity="1",n.style.transform="translateY(0)"},10),setTimeout(()=>{n.style.opacity="0",n.style.transform="translateY(10px)",setTimeout(()=>{n.parentNode&&n.parentNode.removeChild(n)},300)},3e3)}catch(n){console.error(`ChatGPT Pinner: Error in showNotification: ${n.message}`,n),alert(`${t.toUpperCase()}: ${e}`)}}function V(e,t=7e3){return new Promise((n,r)=>{const o=document.querySelector(e);if(o)return n(o);const i=new MutationObserver(()=>{const a=document.querySelector(e);a&&(i.disconnect(),n(a))});i.observe(document.body,{childList:!0,subtree:!0}),setTimeout(()=>{i.disconnect(),r(new Error("Timeout waiting for "+e))},t)})}const D=(e,t)=>{console.error(`ChatGPT Pinner: Storage ${e} error:`,t.message),u(`Error accessing storage for ${e}`,"error")};async function w(e){return new Promise(t=>{chrome.storage.sync.get(e,n=>{chrome.runtime.lastError?(D("get",chrome.runtime.lastError),t(e.reduce((r,o)=>({...r,[o]:void 0}),{}))):t(n)})})}async function E(e){return new Promise((t,n)=>{chrome.storage.sync.set(e,()=>{chrome.runtime.lastError?(D("set",chrome.runtime.lastError),n(chrome.runtime.lastError)):t()})})}async function B(){return w(["pinnedChats","bookmarkedChats","showPinnedInSidebar"])}async function H(){const{pinnedChats:e}=await w(["pinnedChats"]);return e||[]}async function _(e){return E({pinnedChats:e})}async function U(){const{bookmarkedChats:e}=await w(["bookmarkedChats"]);return e||[]}async function z(e){return E({bookmarkedChats:e})}async function W(){const{showPinnedInSidebar:e}=await w(["showPinnedInSidebar"]);return e!==!1}async function L(e,t){try{if(!e||!t){console.error("ChatGPT Pinner: Invalid chat data for pinning",{chatId:e,chatName:t}),u("Cannot pin: Invalid chat data.","error");return}const{pinnedChats:n,bookmarkedChats:r}=await B();let o=n||[],i=r||[];const a=i.some(s=>s.id===e);if(a&&(i=i.filter(s=>s.id!==e)),o.some(s=>s.id===e))a&&await z(i),u(`"${t}" is already pinned`);else{if(o.length>=10){u("Max 10 pins reached.","error");return}let c=`/c/${e}`;e.startsWith("g-p-")?c=`/g/${e}/project`:e.startsWith("g-")?c=`/g/${e}`:e.match(/^[a-f0-9-]{36}$/i)||console.warn("Unknown ID format for pinning:",e),o.push({id:e,name:t,url:c,pinnedAt:new Date().toISOString()}),await E({pinnedChats:o,bookmarkedChats:i}),u(`"${t}" pinned`),f()}}catch(n){console.error(`ChatGPT Pinner: Error in savePinnedChat: ${n.message}`,n),u(`Error pinning chat: ${n.message}`,"error")}}async function N(e,t){try{if(!e||!t){console.error("ChatGPT Pinner: Invalid chat data for bookmarking",{chatId:e,chatName:t}),u("Cannot bookmark: Invalid chat data.","error");return}const{pinnedChats:n,bookmarkedChats:r}=await B();let o=n||[],i=r||[];const a=o.some(s=>s.id===e);if(a&&(o=o.filter(s=>s.id!==e)),i.some(s=>s.id===e))a&&(await _(o),f()),u(`"${t}" is already bookmarked`);else{if(i.length>=50){u("Max 50 bookmarks reached.","error");return}let c=`/c/${e}`;e.startsWith("g-p-")?c=`/g/${e}/project`:e.startsWith("g-")?c=`/g/${e}`:e.match(/^[a-f0-9-]{36}$/i)||console.warn("Unknown ID format for bookmarking:",e),i.push({id:e,name:t,url:c,bookmarkedAt:new Date().toISOString()}),await E({pinnedChats:o,bookmarkedChats:i}),u(`"${t}" bookmarked`,"bookmark"),a&&f()}}catch(n){console.error(`ChatGPT Pinner: Error in saveBookmarkedChat: ${n.message}`,n),u(`Error bookmarking chat: ${n.message}`,"error")}}async function S(e){try{const n=(await H()).filter(r=>r.id!==e);await _(n),u("Chat unpinned"),f()}catch(t){console.error(`ChatGPT Pinner: Error in unpinChat: ${t.message}`,t),u(`Error unpinning chat: ${t.message}`,"error")}}async function q(e){try{const n=(await U()).filter(r=>r.id!==e);await z(n),u("Bookmark removed")}catch(t){console.error(`ChatGPT Pinner: Error in removeBookmarkedChat: ${t.message}`,t),u(`Error removing bookmark: ${t.message}`,"error")}}function K(e){try{const t=document.createElement("li");t.className="relative",t.setAttribute("data-pinner-item-id",e.id);const n=document.createElement("div");n.className="no-draggable group rounded-lg active:opacity-90 bg-[var(--item-background-color)] h-9 text-sm screen-arch:bg-transparent relative flex items-center pr-2",n.style.setProperty("--item-background-color","var(--sidebar-surface-primary)");const r=document.createElement("a");r.className="flex items-center gap-2 p-2 flex-grow overflow-hidden",r.href=e.url,r.setAttribute("data-pinner-link","true"),r.style.maskImage="var(--sidebar-mask)";const o=document.createElement("div");o.className="relative grow overflow-hidden whitespace-nowrap",o.dir="auto",o.title=e.name,o.textContent=e.name,r.appendChild(o);const i=document.createElement("button");return i.className="text-token-text-secondary hover:text-token-text-primary invisible group-hover:visible p-1 rounded",i.setAttribute("aria-label","Unpin conversation"),i.innerHTML='<svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="icon-sm"><line x1="18" y1="6" x2="6" y2="18" stroke="currentColor" stroke-width="2"/><line x1="6" y1="6" x2="18" y2="18" stroke="currentColor" stroke-width="2"/></svg>',i.onclick=a=>{a.preventDefault(),a.stopPropagation(),S(e.id)},n.appendChild(r),n.appendChild(i),t.appendChild(n),t}catch(t){console.error(`ChatGPT Pinner: Error in createPinnedChatItemElement for ${e.id}: ${t.message}`,t);const n=document.createElement("li");return n.textContent=`Error displaying pinned item: ${e.name}`,n.style.color="red",n}}function X(e){try{const t=document.createElement("div");t.id="pinned-chats-section",t.className="relative mt-5 first:mt-0 last:mb-5";const n=document.createElement("div");n.className="bg-token-sidebar-surface-primary sticky top-0 z-20";const r=document.createElement("span");r.className="flex h-9 items-center";const o=document.createElement("h3");o.className="px-2 text-xs font-semibold text-ellipsis overflow-hidden break-all pt-3 pb-2 text-token-text-primary",o.textContent="Pinned",r.appendChild(o),n.appendChild(r),t.appendChild(n);const i=document.createElement("ol");return e.sort((a,d)=>new Date(d.pinnedAt)-new Date(a.pinnedAt)).forEach(a=>i.appendChild(K(a))),t.appendChild(i),t}catch(t){console.error(`ChatGPT Pinner: Error in createPinnedSectionElement: ${t.message}`,t);const n=document.createElement("div");return n.textContent="Error creating pinned section.",n.style.color="red",n}}async function f(){try{const e=await H(),t=await W(),n=document.getElementById("pinned-chats-section");if(n&&n.remove(),!t||e.length===0)return;const r=document.getElementById("sidebar");if(!r){setTimeout(f,1e3);return}const o=r.querySelector('a[data-testid="explore-gpts-button"]'),i=document.getElementById("history");let a=null,d="after";if(o)a=o;else if(i)a=i,d="before";else{const c=r.querySelector(".sticky .text-xs.font-semibold");if(c)if(a=c.closest(".relative.mt-5"),a)d="before";else{console.error("ChatGPT Pinner: Cannot find suitable insertion point for pinned chats (fallback).");return}else{console.error("ChatGPT Pinner: Cannot find suitable insertion point for pinned chats.");return}}const s=X(e);a&&a.parentNode?d==="after"?a.parentNode.insertBefore(s,a.nextSibling):a.parentNode.insertBefore(s,a):console.error("ChatGPT Pinner: Insertion point error for pinned chats section.")}catch(e){console.error(`ChatGPT Pinner: Error in displayPinnedChats: ${e.message}`,e)}}const v={SHARE:"M11.2929 3.29289C",RENAME:"M13.2929 4.29291C",ARCHIVE:"M4.82918 4.10557C",DELETE:"M10.5555 4C10.099 4"};function j(e){try{const t=e.querySelectorAll('div[role="menuitem"]');if(t.length<2)return!1;let n=0;const r=[v.SHARE,v.RENAME,v.DELETE,v.ARCHIVE];t.forEach(a=>{const d=a.querySelector("svg path");if(d){const s=d.getAttribute("d");s&&r.some(c=>s.startsWith(c))&&n++}});const o=e.querySelector('div[role="separator"]')!==null;return n>=2||n>=1&&o}catch(t){return console.error(`ChatGPT Pinner: Error in isMainChatMenu: ${t.message}`,t),!1}}async function R(e,t,n){try{e.querySelectorAll(".chatgpt-pinner-item, .chatgpt-bookmarker-item, .chatgpt-pinner-unpin-item, .chatgpt-bookmark-remove-item, .chatgpt-move-to-bookmarks-item, .chatgpt-move-to-pinned-item").forEach(l=>l.remove()),console.log(`ChatGPT Pinner: Injecting/Updating options for: ${n} (${t}) into menu`);const{pinnedChats:o,bookmarkedChats:i}=await B(),a=o||[],d=i||[],s=a.some(l=>l.id===t),c=d.some(l=>l.id===t);let m=null;const O=Array.from(e.querySelectorAll('div[role="menuitem"]'));if(m=O.find(l=>l.querySelector(`svg path[d^="${v.SHARE}"]`)),m||(m=e.querySelector('[data-testid*="share-chat-menu-item"]')),m||(m=O.find(l=>{var h;return(h=l.textContent)==null?void 0:h.trim().startsWith("Share")}),m&&console.warn("ChatGPT Pinner: Found Share item by text content (fallback).")),m||(m=e.querySelector('div[role="menuitem"]'),console.warn("ChatGPT Pinner: Share item not found. Inserting after the first menu item.")),!m){console.error("ChatGPT Pinner: Menu seems empty. Cannot inject.");return}const g=l=>{m&&m.parentNode?(m.parentNode.insertBefore(l,m.nextSibling),m=l):(console.error("ChatGPT Pinner: Failed to insert, reference element or parent missing. Appending as last resort."),e.appendChild(l),m=l)};if(s){const l=C("Unpin Conversation",'<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="icon-sm shrink-0"><path d="M4 8h8" stroke="currentColor" stroke-width="2"/></svg>',"chatgpt-pinner-unpin-item");l.addEventListener("click",p=>{p.stopPropagation(),S(t),k(e)}),g(l);const h=C("Move to Bookmarks",'<svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="icon-sm shrink-0"><path d="M16.998 8.50199H7.00195M7.00195 8.50199L10.502 5.00195M7.00195 8.50199L10.502 12.002M7.00195 15.502H17.002M17.002 15.502L13.502 19.002M17.002 15.502L13.502 12.002" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/></svg>',"chatgpt-move-to-bookmarks-item");h.addEventListener("click",async p=>{p.stopPropagation(),await S(t),await N(t,n),k(e)}),g(h)}else if(c){const l=C("Remove Bookmark",'<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="icon-sm shrink-0"><path d="M4 8h8" stroke="currentColor" stroke-width="2"/></svg>',"chatgpt-bookmark-remove-item");l.addEventListener("click",p=>{p.stopPropagation(),q(t),k(e)}),g(l);const h=C("Move to Pinned",'<svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="icon-sm shrink-0"><path d="M16.998 8.50199H7.00195M7.00195 8.50199L10.502 5.00195M7.00195 8.50199L10.502 12.002M7.00195 15.502H17.002M17.002 15.502L13.502 19.002M17.002 15.502L13.502 12.002" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/></svg>',"chatgpt-move-to-pinned-item");h.addEventListener("click",async p=>{p.stopPropagation(),await q(t),await L(t,n),k(e)}),g(h)}else{const l=C("Pin Conversation",'<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="icon-sm shrink-0"><path fill-rule="evenodd" clip-rule="evenodd" d="M11.5 5.5V2C11.5 1.72386 11.2761 1.5 11 1.5H5C4.72386 1.5 4.5 1.72386 4.5 2V5.5C4.5 6.32843 3.82843 7 3 7C2.72386 7 2.5 7.22386 2.5 7.5C2.5 7.77614 2.72386 8 3 8H7.5V13.5C7.5 13.7761 7.72386 14 8 14C8.27614 14 8.5 13.7761 8.5 13.5V8H13C13.2761 8 13.5 7.77614 13.5 7.5C13.5 7.22386 13.2761 7 13 7C12.1716 7 11.5 6.32843 11.5 5.5Z" fill="currentColor"></path></svg>',"chatgpt-pinner-item");l.addEventListener("click",p=>{p.stopPropagation(),L(t,n),k(e)}),g(l);const h=C("Bookmark Conversation",'<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="icon-sm shrink-0"><path fill-rule="evenodd" clip-rule="evenodd" d="M3 3.25C3 2.00736 4.00736 1 5.25 1H10.75C11.9926 1 13 2.00736 13 3.25V14.0387C13 14.7926 12.1798 15.2843 11.5094 14.9145L8 12.882L4.49063 14.9145C3.82021 15.2843 3 14.7926 3 14.0387V3.25ZM5.25 2.5C4.83579 2.5 4.5 2.83579 4.5 3.25V13.0387L7.50937 11.3355C7.8094 11.1573 8.1906 11.1573 8.49063 11.3355L11.5 13.0387V3.25C11.5 2.83579 11.1642 2.5 10.75 2.5H5.25Z" fill="currentColor"/></svg>',"chatgpt-bookmarker-item");h.addEventListener("click",p=>{p.stopPropagation(),N(t,n),k(e)}),g(h)}console.log("ChatGPT Pinner: Menu options injected/updated successfully.")}catch(r){console.error(`ChatGPT Pinner: Error in injectPinElement: ${r.message}`,r),u(`Failed to update menu options: ${r.message}`,"error")}}const $='li[data-testid^="history-item-"] button, a[href^="/g/"] button',A="M3 12C3";let P=null,b=null;function Z(e,t){try{const n=document.querySelectorAll('[data-radix-popper-content-wrapper] [role="menu"][data-radix-menu-content][data-state="open"], body > [role="menu"][data-radix-menu-content][data-state="open"]');for(const r of n)if(j(r)&&!r.querySelector(".chatgpt-pinner-item"))return R(r,e,t),!0;return!1}catch(n){return console.error(`ChatGPT Pinner: Error in tryImmediateInjection: ${n.message}`,n),!1}}function Y(e,t){var r;const n=()=>{P&&(P.disconnect(),P=null),b&&(clearTimeout(b),b=null)};try{P=new MutationObserver(i=>{let a=!1;for(const d of i){if(a)break;if(d.addedNodes.length)for(const s of d.addedNodes){if(a)break;if(s.nodeType===Node.ELEMENT_NODE){let c=null;if(s.matches('[role="menu"][data-radix-menu-content][data-state="open"]')?c=s:s.querySelector&&(c=s.querySelector('[role="menu"][data-radix-menu-content][data-state="open"]')),c&&j(c)){c.querySelector(".chatgpt-pinner-item")||(R(c,e,t),a=!0),n();break}}}}}),P.observe(document.body,{childList:!0,subtree:!1});const o=(r=document.querySelector("[data-radix-popper-content-wrapper]"))==null?void 0:r.parentNode;o&&o!==document.body&&P.observe(o,{childList:!0,subtree:!0}),b=setTimeout(()=>{console.log("ChatGPT Pinner: Menu observation timed out."),n()},1500)}catch(o){console.error(`ChatGPT Pinner: Error setting up observeMenuAddition: ${o.message}`,o),n()}}function M(e){try{const t=e.currentTarget,n=t.closest("span[data-state]"),r=t.closest('li[data-testid^="history-item-"]'),o=t.closest('a[href^="/g/"]');if(!n&&!r&&!o)return;setTimeout(()=>{const i=F(t);if(!i||!i.chatId||!i.chatName){console.warn("ChatGPT Pinner: Could not extract chat info from button.",t);return}const{chatId:a,chatName:d}=i;Z(a,d)||Y(a,d)},50)}catch(t){console.error(`ChatGPT Pinner: Error in handleOptionsButtonClick: ${t.message}`,t)}}function J(){try{console.log("ChatGPT Pinner: Performing initial scan for options buttons."),document.querySelectorAll($).forEach(e=>{(e.querySelector(`svg path[d^="${A}"]`)||e.closest("span[data-state]"))&&!e.hasAttribute("data-pinner-listener-added")&&(e.addEventListener("click",M),e.setAttribute("data-pinner-listener-added","true"))})}catch(e){console.error(`ChatGPT Pinner: Error during initialScanForOptionsButtons: ${e.message}`,e)}}const Q=new MutationObserver(e=>{try{e.forEach(t=>{t.addedNodes.forEach(n=>{var r;if(n.nodeType===Node.ELEMENT_NODE){n.matches($)&&(n.querySelector(`svg path[d^="${A}"]`)||n.closest("span[data-state]"))&&!n.hasAttribute("data-pinner-listener-added")&&(n.addEventListener("click",M),n.setAttribute("data-pinner-listener-added","true"));const o=(r=n.querySelectorAll)==null?void 0:r.call(n,$);o&&o.length>0&&o.forEach(i=>{(i.querySelector(`svg path[d^="${A}"]`)||i.closest("span[data-state]"))&&!i.hasAttribute("data-pinner-listener-added")&&(i.addEventListener("click",M),i.setAttribute("data-pinner-listener-added","true"))})}})})}catch(t){console.error(`ChatGPT Pinner: Error in mainPageObserver callback: ${t.message}`,t)}});function ee(){try{J(),Q.observe(document.body,{childList:!0,subtree:!0}),console.log("ChatGPT Pinner: Main observer started and initial scan complete.")}catch(e){console.error(`ChatGPT Pinner: Failed to start mainPageObserver or initial scan: ${e.message}`,e)}}function te(){try{console.log("ChatGPT Pinner: Initializing... (Modular V6)"),ee(),f(),chrome.storage.onChanged.addListener((e,t)=>{try{t==="sync"&&(e.pinnedChats||e.showPinnedInSidebar)&&(console.log("ChatGPT Pinner: Detected change in pinned chats or visibility setting."),f())}catch(n){console.error(`ChatGPT Pinner: Error in storage.onChanged listener: ${n.message}`,n)}}),console.log("ChatGPT Pinner: Modular initialization complete.")}catch(e){console.error(`ChatGPT Pinner: Error during modular initial setup: ${e.message}`,e),u("Error initializing Pinner features on page.","error")}}let x=0;const T=10;function G(){try{x++,document.querySelector('nav[aria-label*="Chat history"], nav[aria-label*="Sohbet geçmişi"]')||document.getElementById("sidebar")||document.querySelector('div[class*="shared__Wrapper"] nav')?(console.log("ChatGPT Pinner: Sidebar or history nav detected, proceeding with initialization."),te()):x<T?(console.log(`ChatGPT Pinner: Sidebar/History nav not ready, retrying initialization... (Attempt ${x}/${T})`),setTimeout(G,1e3)):(console.error(`ChatGPT Pinner: Failed to find sidebar/history nav after ${T} attempts. Initialization aborted.`),u("Pinner could not find the sidebar. Please try refreshing the page.","error"))}catch(e){console.error(`ChatGPT Pinner: Error in attemptInitialization: ${e.message}`,e)}}V('nav[aria-label*="Chat history"], nav[aria-label*="Sohbet geçmişi"], div[class*="shared__Wrapper"] nav, #sidebar',15e3).then(()=>{console.log("ChatGPT Pinner: Core UI element found. Attempting initialization."),G()}).catch(e=>{console.error("ChatGPT Pinner: Element wait failed, initialization might not run correctly.",e),console.log("ChatGPT Pinner: Core UI element wait failed. Attempting a delayed initialization as a fallback."),setTimeout(G,5e3),y});
